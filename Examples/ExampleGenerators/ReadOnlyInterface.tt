<#@ template language="C#" inherits="ByClassFileGeneratorBase" #>

<#@ import namespace="JetBrains.ReSharper.Psi.CSharp.Tree" #>

<#@ import namespace="T4CodeGenerator.Generators.Core.Generators.Common" #>
<#@ import namespace="T4CodeGenerator.Generators.Core.Helpers" #>

namespace <#=this.ExpectedNamespace#>
{
	public interface <#=this.InterfaceName#>
	{
		<#foreach(IPropertyDeclaration property in this.Class.PropertyDeclarations.Where(x => x.IsPublic())){#>
			<#=property.Type#> <#=property.DeclaredName#> { get; }
		<#}#>
	}
}

<#+
    protected string InterfaceName => $"IReadOnly{this.Class.DeclaredName}";

    public override string Name => "Read-only interface";

    public override string GetFileName() => $"{this.CurrentFolder}\\{InterfaceName}.cs";

    public override bool IsAvailableCore() =>
        this.Class is IClassDeclaration ||
        this.Class is IStructDeclaration;
#>