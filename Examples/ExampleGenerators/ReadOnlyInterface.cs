// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ExampleGenerators
{
    using JetBrains.ReSharper.Psi.CSharp.Tree;
    using T4CodeGenerator.Generators.Core.Generators.Common;
    using T4CodeGenerator.Generators.Core.Helpers;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class ReadOnlyInterface : ByClassFileGeneratorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            this.Write("\r\nnamespace ");
            
            #line 8 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.ExpectedNamespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\tpublic interface ");
            
            #line 10 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.InterfaceName));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\t\t");
            
            #line 12 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"
foreach(IPropertyDeclaration property in this.Class.PropertyDeclarations.Where(x => x.IsPublic())){
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 13 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 13 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.DeclaredName));
            
            #line default
            #line hidden
            this.Write(" { get; }\r\n\t\t");
            
            #line 14 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"
}
            
            #line default
            #line hidden
            this.Write("\t}\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 18 "C:\T4CodeGeneratorExamples\ExampleGenerators\ReadOnlyInterface.tt"

    protected string InterfaceName => $"IReadOnly{this.Class.DeclaredName}";

    public override string Name => "Read-only interface";

    public override string GetFileName() => $"{this.CurrentFolder}\\{InterfaceName}.cs";

    public override bool IsAvailableCore() =>
        this.Class is IClassDeclaration ||
        this.Class is IStructDeclaration;

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
