// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ExampleGenerators
{
    using JetBrains.ReSharper.Psi;
    using JetBrains.ReSharper.Psi.CSharp.Tree;
    using JetBrains.ReSharper.Psi.Util;
    using System.Collections.Generic;
    using T4CodeGenerator.Generators.Core.Generators.Common;
    using T4CodeGenerator.Generators.Core.Helpers;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class SimpleCopyConstructor : InsideClassBodyInPlaceGeneratorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            
            #line 10 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

void WriteCopyExpression(IType type, string memberName, int xIndex = 0)
{
    string xName = "x" + (xIndex > 0 ? xIndex.ToString() : null);
    IType elementType = type.GetGenericUnderlyingType(type.GetTypeElement());
    switch (type)
    {
		case IDeclaredType dt when dt.IsValueType() || dt.IsString():
			
            
            #line default
            #line hidden
            
            #line 18 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberName));
            
            #line default
            #line hidden
            
            #line 18 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

		    break;
        case IDeclaredType dt when dt.Is(typeof(List<>)) && (elementType.IsValueType() || elementType.IsString()):
			
            
            #line default
            #line hidden
            
            #line 21 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberName));
            
            #line default
            #line hidden
            this.Write(".ToList()");
            
            #line 21 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

            break;
        case IDeclaredType dt when dt.Is(typeof(List<>)):
			
            
            #line default
            #line hidden
            
            #line 24 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberName));
            
            #line default
            #line hidden
            this.Write(".ConvertAll(");
            
            #line 24 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(xName));
            
            #line default
            #line hidden
            this.Write(" => ");
            
            #line 24 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
WriteCopyExpression(elementType, xName, xIndex + 1);
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 24 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

            break;
		case IArrayType at when at.Rank == 1 && (at.ElementType.IsValueType() || at.ElementType.IsString()):
			
            
            #line default
            #line hidden
            
            #line 27 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberName));
            
            #line default
            #line hidden
            this.Write(".ToArray()");
            
            #line 27 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

		    break;
		case IArrayType at when at.Rank == 1:
			
            
            #line default
            #line hidden
            
            #line 30 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberName));
            
            #line default
            #line hidden
            this.Write(".Select(");
            
            #line 30 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(xName));
            
            #line default
            #line hidden
            this.Write(" => ");
            
            #line 30 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
WriteCopyExpression(at.ElementType, xName, xIndex + 1);
            
            #line default
            #line hidden
            this.Write(").ToArray()");
            
            #line 30 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

		    break;
		default:
			
            
            #line default
            #line hidden
            this.Write("new ");
            
            #line 33 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.GetCSharpTypeName()));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 33 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberName));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 33 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

		    break;
    }
}

            
            #line default
            #line hidden
            this.Write("\r\npublic ");
            
            #line 39 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Class.DeclaredName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 39 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Class.DeclaredName));
            
            #line default
            #line hidden
            this.Write(" source)\r\n{\r\n\t");
            
            #line 41 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
foreach(IPropertyDeclaration property in this.Class.PropertyDeclarations.Where(x => !x.IsReadonly)){
            
            #line default
            #line hidden
            this.Write("\t\tthis.");
            
            #line 42 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.DeclaredName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 42 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
WriteCopyExpression(property.Type, $"source.{property.DeclaredName}");
            
            #line default
            #line hidden
            this.Write(";\r\n\t");
            
            #line 43 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"
}
            
            #line default
            #line hidden
            this.Write("}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 46 "C:\T4CodeGeneratorExamples\ExampleGenerators\SimpleCopyConstructor.tt"

	public override string Name => "Simple copy constructor";

    public override string Description =>
        "Supports copying only value-type properties, properties of type List<T>, T[] and types that has copy constructor.";

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
